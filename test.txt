const f64 factorial(const f64 n)
{
	//n = 0;
    if(n == 0 || n == 1)
        return 1;
    return n * factorial(n-1);
}

void mod(f64* value)
{
    *value = 666;
}

void mod2(s8* s)
{
	*s = 44;
}

void mod3(const s8* const * ptr)
{
	print(**ptr + 44);
	**(s8**)ptr  = 69;
}

void main()
{
	print("hello from script, nice to see you!");
	const s8* const strr = "fjkdfjdkl";
	factorial(3.0);
	{
		s32 x = 10;
		s32* const  ptr = &x;
		*ptr = 20;
		//ptr = nullptr;
		print(x);
	}
	
	{
		const s8 x = 6;
		const s8* const ptr = &x;
		//mod2(ptr);
		mod3(&ptr);
		print(x);
	}
	{
		const s8 x = -1;
		//(s8)x = 5;
		print(6969);
		print(x);
	}

	const s8 dddd = factorial(3);
	bool d = true;
	++d;
	print(d);
	d = 0;
	print(d);
	++d;
	print(d);
	print(666 != 69);
	print( (5 + 2) * 2 );
	s8* string = (s8*)malloc(10);
	*(string) =  65;
	*(string + (s32)1.1) = 66;
	*(string + 2) = 10;
	*(string + 3) = 0;
	print(string); // AB
	f64 lik = 70;
	print((bool)lik);
	bool cc = 900;
	print(cc);
	cc -= 1;
	print(cc);
	cc = 1;
	cc -= 2;
	print(cc);
	

    print(factorial(9));
    {
        print(6999);
    }
    
    f64* ptr;
    
    f64 i  = 8;
    
    ptr = &i;
    
    *ptr = 10;
    print(i);
    
    f64** ptr2 = &ptr;
    
    **ptr2 = 20;
    
    print(i);
    
    mod(*ptr2);
    print(i);
	
	print(5 + 6);
	
	bool lolo = true;
	lolo = false;
	f64 dd = true + false;
	print(dd);
	
	dd = 666;
	print(dd);
	print(!!dd);
	
	s32 dua = true + true +  true * 2;
	print(dua);
	print(true + true + false);
	
	{
		void* ptr1 = &lolo;
		//ptr1 = nullptr;
		
		if(ptr1)
			print(38924983);
		else
			print(11111111);
			
	}
}