f64 factorial(f64 n)
{
    if(n == 0 || n == 1)
        return 1;
    return n * factorial(n-1);
}

void mod(f64* value)
{
    *value = 666;
}


void main()
{
	print( (5 + 2) * 2 );
	s8* string = (s8*)malloc(10);
	*(string) =  65;
	*(string + 1) = 66;
	*(string + 2) = 10;
	*(string + 3) = 0;
	print(string); // AB
	f64 lik = 70;
	print((bool)lik);
	bool cc = 900;
	print(cc);
	cc -= 1;
	print(cc);
	cc = 1;
	cc -= 2;
	print(cc);
	

    print(factorial(9));
    {
        print(6999);
    }
    
    f64* ptr;
    
    f64 i  = 8;
    
    ptr = &i;
    
    *ptr = 10;
    print(i);
    
    f64** ptr2 = &ptr;
    
    **ptr2 = 20;
    
    print(i);
    
    mod(*ptr2);
    print(i);
	
	print(5 + 6);
	
	bool lolo = true;
	lolo = false;
	f64 dd = true + false;
	print(dd);
	
	dd = 666;
	print(dd);
	print(!!dd);
	
	s32 dua = true + true +  true * 2;
	print(dua);
	print(true + true + false);
	
	{
		void* ptr1 = &lolo;
		//ptr1 = nullptr;
		
		if(ptr1)
			print(38924983);
		else
			print(11111111);
			
	}
}