function: to_radians
stack_size: 1
0 address of
1 dereference 8
2 push
3 div f64
4 push
5 mul f64
6 push
7 mul f64
8 return


function: add_vec3_scalar
stack_size: 4
0 address of
1 push
2 add ptr s32
3 dereference 8
4 address of
5 dereference 8
6 add f64
7 address of
8 push
9 add ptr s32
10 store 8 at
11 pop
12 clear
13 address of
14 push
15 add ptr s32
16 dereference 8
17 address of
18 dereference 8
19 add f64
20 address of
21 push
22 add ptr s32
23 store 8 at
24 pop
25 clear
26 address of
27 push
28 add ptr s32
29 dereference 8
30 address of
31 dereference 8
32 add f64
33 address of
34 push
35 add ptr s32
36 store 8 at
37 pop
38 clear
39 address of
40 dereference struct
41 return


function: mul_vec3_scalar
stack_size: 4
0 address of
1 push
2 add ptr s32
3 dereference 8
4 address of
5 dereference 8
6 mul f64
7 address of
8 push
9 add ptr s32
10 store 8 at
11 pop
12 clear
13 address of
14 push
15 add ptr s32
16 dereference 8
17 address of
18 dereference 8
19 mul f64
20 address of
21 push
22 add ptr s32
23 store 8 at
24 pop
25 clear
26 address of
27 push
28 add ptr s32
29 dereference 8
30 address of
31 dereference 8
32 mul f64
33 address of
34 push
35 add ptr s32
36 store 8 at
37 pop
38 clear
39 address of
40 dereference struct
41 return


function: div_vec3_scalar
stack_size: 4
0 address of
1 push
2 add ptr s32
3 dereference 8
4 address of
5 dereference 8
6 div f64
7 address of
8 push
9 add ptr s32
10 store 8 at
11 pop
12 clear
13 address of
14 push
15 add ptr s32
16 dereference 8
17 address of
18 dereference 8
19 div f64
20 address of
21 push
22 add ptr s32
23 store 8 at
24 pop
25 clear
26 address of
27 push
28 add ptr s32
29 dereference 8
30 address of
31 dereference 8
32 div f64
33 address of
34 push
35 add ptr s32
36 store 8 at
37 pop
38 clear
39 address of
40 dereference struct
41 return


function: add_vec3
stack_size: 6
0 address of
1 push
2 add ptr s32
3 dereference 8
4 address of
5 push
6 add ptr s32
7 dereference 8
8 add f64
9 address of
10 push
11 add ptr s32
12 store 8 at
13 pop
14 clear
15 address of
16 push
17 add ptr s32
18 dereference 8
19 address of
20 push
21 add ptr s32
22 dereference 8
23 add f64
24 address of
25 push
26 add ptr s32
27 store 8 at
28 pop
29 clear
30 address of
31 push
32 add ptr s32
33 dereference 8
34 address of
35 push
36 add ptr s32
37 dereference 8
38 add f64
39 address of
40 push
41 add ptr s32
42 store 8 at
43 pop
44 clear
45 address of
46 dereference struct
47 return


function: sub_vec3
stack_size: 6
0 address of
1 push
2 add ptr s32
3 dereference 8
4 address of
5 push
6 add ptr s32
7 dereference 8
8 sub f64
9 address of
10 push
11 add ptr s32
12 store 8 at
13 pop
14 clear
15 address of
16 push
17 add ptr s32
18 dereference 8
19 address of
20 push
21 add ptr s32
22 dereference 8
23 sub f64
24 address of
25 push
26 add ptr s32
27 store 8 at
28 pop
29 clear
30 address of
31 push
32 add ptr s32
33 dereference 8
34 address of
35 push
36 add ptr s32
37 dereference 8
38 sub f64
39 address of
40 push
41 add ptr s32
42 store 8 at
43 pop
44 clear
45 address of
46 dereference struct
47 return


function: mul_vec3
stack_size: 6
0 address of
1 push
2 add ptr s32
3 dereference 8
4 address of
5 push
6 add ptr s32
7 dereference 8
8 mul f64
9 address of
10 push
11 add ptr s32
12 store 8 at
13 pop
14 clear
15 address of
16 push
17 add ptr s32
18 dereference 8
19 address of
20 push
21 add ptr s32
22 dereference 8
23 mul f64
24 address of
25 push
26 add ptr s32
27 store 8 at
28 pop
29 clear
30 address of
31 push
32 add ptr s32
33 dereference 8
34 address of
35 push
36 add ptr s32
37 dereference 8
38 mul f64
39 address of
40 push
41 add ptr s32
42 store 8 at
43 pop
44 clear
45 address of
46 dereference struct
47 return


function: transform_vec3
stack_size: 12
0 address of
1 push
2 add ptr s32
3 dereference struct
4 address of
5 push
6 add ptr s32
7 dereference 8
8 call
9 address of
10 push
11 add ptr s32
12 store struct at
13 pop
14 clear
15 address of
16 push
17 add ptr s32
18 dereference struct
19 address of
20 push
21 add ptr s32
22 dereference 8
23 call
24 address of
25 push
26 add ptr s32
27 store struct at
28 pop
29 clear
30 address of
31 push
32 add ptr s32
33 dereference struct
34 address of
35 push
36 add ptr s32
37 dereference 8
38 call
39 address of
40 push
41 add ptr s32
42 store struct at
43 pop
44 clear
45 address of
46 push
47 add ptr s32
48 dereference struct
49 address of
50 push
51 add ptr s32
52 dereference struct
53 call
54 address of
55 push
56 add ptr s32
57 dereference struct
58 call
59 return


function: cross
stack_size: 9
0 address of
1 push
2 add ptr s32
3 dereference 8
4 address of
5 push
6 add ptr s32
7 dereference 8
8 mul f64
9 address of
10 push
11 add ptr s32
12 dereference 8
13 address of
14 push
15 add ptr s32
16 dereference 8
17 mul f64
18 sub f64
19 address of
20 push
21 add ptr s32
22 store 8 at
23 pop
24 clear
25 address of
26 push
27 add ptr s32
28 dereference 8
29 address of
30 push
31 add ptr s32
32 dereference 8
33 mul f64
34 address of
35 push
36 add ptr s32
37 dereference 8
38 address of
39 push
40 add ptr s32
41 dereference 8
42 mul f64
43 sub f64
44 address of
45 push
46 add ptr s32
47 store 8 at
48 pop
49 clear
50 address of
51 push
52 add ptr s32
53 dereference 8
54 address of
55 push
56 add ptr s32
57 dereference 8
58 mul f64
59 address of
60 push
61 add ptr s32
62 dereference 8
63 address of
64 push
65 add ptr s32
66 dereference 8
67 mul f64
68 sub f64
69 address of
70 push
71 add ptr s32
72 store 8 at
73 pop
74 clear
75 address of
76 dereference struct
77 return


function: dot
stack_size: 6
0 address of
1 dereference struct
2 address of
3 dereference struct
4 call
5 address of
6 store struct at
7 pop
8 clear
9 address of
10 push
11 add ptr s32
12 dereference 8
13 address of
14 push
15 add ptr s32
16 dereference 8
17 add f64
18 address of
19 push
20 add ptr s32
21 dereference 8
22 add f64
23 return


function: length
stack_size: 3
0 address of
1 dereference struct
2 address of
3 dereference struct
4 call
5 call
6 return


function: normalize
stack_size: 4
0 address of
1 dereference struct
2 call
3 address of
4 store 8 at
5 address of
6 dereference struct
7 address of
8 dereference 8
9 call
10 return


function: reflect
stack_size: 6
0 address of
1 dereference struct
2 address of
3 dereference struct
4 push
5 negate f64
6 address of
7 dereference struct
8 address of
9 dereference struct
10 call
11 mul f64
12 call
13 call
14 return


function: unit_sphere_sample
stack_size: 3
0 push
1 convert f64 s32
2 address of
3 push
4 add ptr s32
5 store 8 at
6 pop
7 address of
8 push
9 add ptr s32
10 store 8 at
11 pop
12 address of
13 push
14 add ptr s32
15 store 8 at
16 pop
17 clear
18 address of
19 dereference struct
20 call
21 push
22 compare g f64
23 jump false: 63
24 call
25 address of
26 push
27 add ptr s32
28 store 8 at
29 pop
30 clear
31 call
32 address of
33 push
34 add ptr s32
35 store 8 at
36 pop
37 clear
38 call
39 address of
40 push
41 add ptr s32
42 store 8 at
43 pop
44 clear
45 address of
46 dereference struct
47 push
48 call
49 address of
50 store struct at
51 pop
52 clear
53 address of
54 dereference struct
55 push
56 negate f64
57 call
58 address of
59 store struct at
60 pop
61 clear
62 jump: 18
63 address of
64 dereference struct
65 return


function: scatter_lambertian
stack_size: 5
0 address of
1 dereference 8
2 push
3 add ptr s32
4 dereference struct
5 address of
6 dereference 8
7 push
8 add ptr s32
9 dereference struct
10 call
11 address of
12 store struct at
13 address of
14 dereference struct
15 call
16 call
17 address of
18 store struct at
19 pop
20 clear
21 address of
22 dereference struct
23 address of
24 dereference 8
25 push
26 add ptr s32
27 dereference struct
28 call
29 call
30 address of
31 dereference 8
32 push
33 add ptr s32
34 store struct at
35 pop
36 clear
37 address of
38 dereference 8
39 push
40 add ptr s32
41 dereference struct
42 address of
43 dereference 8
44 push
45 add ptr s32
46 store struct at
47 pop
48 clear
49 address of
50 dereference 8
51 push
52 add ptr s32
53 dereference 8
54 push
55 add ptr s32
56 dereference struct
57 return


function: scatter_metal
stack_size: 8
0 call
1 address of
2 dereference 8
3 push
4 add ptr s32
5 dereference 8
6 push
7 add ptr s32
8 dereference 8
9 call
10 address of
11 store struct at
12 address of
13 dereference 8
14 push
15 add ptr s32
16 dereference 8
17 push
18 add ptr s32
19 dereference struct
20 address of
21 dereference 8
22 push
23 add ptr s32
24 dereference struct
25 call
26 address of
27 dereference 8
28 push
29 add ptr s32
30 store struct at
31 pop
32 clear
33 address of
34 dereference 8
35 push
36 add ptr s32
37 dereference struct
38 address of
39 dereference struct
40 call
41 call
42 address of
43 dereference 8
44 push
45 add ptr s32
46 store struct at
47 pop
48 clear
49 address of
50 dereference 8
51 push
52 add ptr s32
53 dereference struct
54 address of
55 dereference 8
56 push
57 add ptr s32
58 store struct at
59 pop
60 clear
61 address of
62 dereference 8
63 push
64 add ptr s32
65 dereference struct
66 address of
67 dereference 8
68 push
69 add ptr s32
70 dereference struct
71 call
72 push
73 compare l f64
74 jump false: 95
75 push
76 address of
77 push
78 add ptr s32
79 store 8 at
80 pop
81 address of
82 push
83 add ptr s32
84 store 8 at
85 pop
86 address of
87 push
88 add ptr s32
89 store 8 at
90 pop
91 clear
92 address of
93 dereference struct
94 return
95 address of
96 dereference 8
97 push
98 add ptr s32
99 dereference 8
100 push
101 add ptr s32
102 dereference struct
103 return


function: get_collision_distance
stack_size: 23
0 address of
1 push
2 add ptr s32
3 dereference struct
4 address of
5 push
6 add ptr s32
7 dereference struct
8 call
9 address of
10 store struct at
11 address of
12 push
13 add ptr s32
14 dereference struct
15 address of
16 push
17 add ptr s32
18 dereference struct
19 call
20 address of
21 store 8 at
22 push
23 address of
24 dereference struct
25 address of
26 push
27 add ptr s32
28 dereference struct
29 call
30 mul f64
31 address of
32 store 8 at
33 address of
34 dereference struct
35 address of
36 dereference struct
37 call
38 address of
39 push
40 add ptr s32
41 dereference 8
42 address of
43 push
44 add ptr s32
45 dereference 8
46 mul f64
47 sub f64
48 address of
49 store 8 at
50 address of
51 dereference 8
52 address of
53 dereference 8
54 mul f64
55 push
56 address of
57 dereference 8
58 mul f64
59 address of
60 dereference 8
61 mul f64
62 sub f64
63 address of
64 store 8 at
65 address of
66 dereference 8
67 push
68 compare g f64
69 jump false: 127
70 push
71 address of
72 store 8 at
73 address of
74 dereference 4
75 push
76 compare l s32
77 jump false: 127
78 address of
79 dereference 4
80 push
81 mul s32
82 push
83 sub s32
84 address of
85 store 8 at
86 address of
87 dereference 8
88 negate f64
89 address of
90 dereference 4
91 convert f64 s32
92 address of
93 dereference 8
94 call
95 mul f64
96 add f64
97 push
98 div f64
99 address of
100 store 8 at
101 address of
102 dereference 8
103 address of
104 dereference 8
105 compare ge f64
106 jump false: 113
107 address of
108 dereference 8
109 address of
110 dereference 8
111 compare le f64
112 jump: 114
113 push
114 jump false: 118
115 address of
116 dereference 8
117 return
118 address of
119 clone
120 dereference 4
121 push
122 add s32
123 swap
124 store 4 at
125 pop
126 jump: 73
127 push
128 return


function: get_ray_color
stack_size: 29
0 address of
1 dereference 4
2 push
3 compare g s32
4 jump false: 25
5 push
6 address of
7 push
8 add ptr s32
9 store 8 at
10 pop
11 address of
12 push
13 add ptr s32
14 store 8 at
15 pop
16 address of
17 push
18 add ptr s32
19 store 8 at
20 pop
21 clear
22 address of
23 dereference struct
24 return
25 push
26 address of
27 store 8 at
28 push
29 negate s32
30 address of
31 store 8 at
32 push
33 address of
34 store 8 at
35 address of
36 dereference 4
37 address of
38 dereference 4
39 compare l s32
40 jump false: 82
41 address of
42 dereference struct
43 address of
44 dereference 8
45 address of
46 dereference 4
47 push
48 mul s32
49 add ptr s32
50 dereference struct
51 push
52 address of
53 dereference 8
54 call
55 address of
56 store 8 at
57 address of
58 dereference 8
59 convert s32 f64
60 jump false: 73
61 address of
62 dereference 8
63 address of
64 store 8 at
65 pop
66 clear
67 address of
68 dereference 4
69 address of
70 store 4 at
71 pop
72 clear
73 address of
74 clone
75 dereference 4
76 push
77 add s32
78 swap
79 store 4 at
80 pop
81 jump: 35
82 address of
83 dereference 4
84 push
85 negate s32
86 compare ne s32
87 jump false: 219
88 address of
89 dereference 8
90 address of
91 dereference 4
92 push
93 mul s32
94 add ptr s32
95 address of
96 store 8 at
97 address of
98 address of
99 push
100 add ptr s32
101 store 8 at
102 pop
103 clear
104 address of
105 push
106 add ptr s32
107 dereference struct
108 address of
109 push
110 add ptr s32
111 dereference struct
112 address of
113 dereference 8
114 call
115 call
116 address of
117 push
118 add ptr s32
119 store struct at
120 pop
121 clear
122 address of
123 push
124 add ptr s32
125 dereference struct
126 address of
127 dereference 8
128 push
129 add ptr s32
130 dereference struct
131 call
132 call
133 address of
134 push
135 add ptr s32
136 store struct at
137 pop
138 clear
139 address of
140 dereference 8
141 push
142 add ptr s32
143 dereference 8
144 address of
145 push
146 add ptr s32
147 store 8 at
148 pop
149 clear
150 address of
151 dereference 8
152 push
153 add ptr s32
154 dereference 8
155 push
156 add ptr s32
157 dereference 4
158 push
159 compare e s32
160 jump false: 169
161 address of
162 address of
163 call
164 address of
165 store struct at
166 pop
167 clear
168 jump: 176
169 address of
170 address of
171 call
172 address of
173 store struct at
174 pop
175 clear
176 address of
177 push
178 add ptr s32
179 dereference 8
180 push
181 compare e f64
182 jump false: 190
183 address of
184 push
185 add ptr s32
186 dereference 8
187 push
188 compare e f64
189 jump: 191
190 push
191 jump false: 199
192 address of
193 push
194 add ptr s32
195 dereference 8
196 push
197 compare e f64
198 jump: 200
199 push
200 jump false: 204
201 address of
202 dereference struct
203 return
204 address of
205 dereference struct
206 address of
207 dereference struct
208 address of
209 dereference 8
210 address of
211 dereference 4
212 address of
213 dereference 4
214 push
215 add s32
216 call
217 call
218 return
219 address of
220 push
221 add ptr s32
222 push
223 add ptr s32
224 dereference 8
225 push
226 add f64
227 push
228 div f64
229 address of
230 store 8 at
231 push
232 address of
233 push
234 add ptr s32
235 store 8 at
236 pop
237 clear
238 push
239 address of
240 push
241 add ptr s32
242 store 8 at
243 pop
244 clear
245 push
246 address of
247 push
248 add ptr s32
249 store 8 at
250 pop
251 clear
252 push
253 address of
254 push
255 add ptr s32
256 store 8 at
257 pop
258 clear
259 push
260 address of
261 push
262 add ptr s32
263 store 8 at
264 pop
265 clear
266 push
267 address of
268 push
269 add ptr s32
270 store 8 at
271 pop
272 clear
273 address of
274 dereference struct
275 push
276 address of
277 dereference 8
278 sub f64
279 call
280 address of
281 dereference struct
282 address of
283 dereference 8
284 call
285 call
286 return


function: main
stack_size: 58
0 push
1 address of
2 store 8 at
3 push
4 address of
5 store 8 at
6 push
7 address of
8 store 8 at
9 address of
10 dereference 4
11 address of
12 dereference 4
13 mul s32
14 push
15 mul s32
16 call
17 address of
18 store 8 at
19 push
20 convert f64 s32
21 address of
22 push
23 add ptr s32
24 push
25 add ptr s32
26 store 8 at
27 pop
28 clear
29 push
30 convert f64 s32
31 address of
32 push
33 add ptr s32
34 push
35 add ptr s32
36 store 8 at
37 pop
38 clear
39 push
40 convert f64 s32
41 address of
42 push
43 add ptr s32
44 push
45 add ptr s32
46 store 8 at
47 pop
48 clear
49 address of
50 push
51 add ptr s32
52 push
53 add ptr s32
54 dereference 8
55 negate f64
56 address of
57 push
58 add ptr s32
59 push
60 add ptr s32
61 store 8 at
62 pop
63 clear
64 address of
65 push
66 add ptr s32
67 push
68 add ptr s32
69 dereference 8
70 negate f64
71 address of
72 push
73 add ptr s32
74 push
75 add ptr s32
76 store 8 at
77 pop
78 clear
79 address of
80 push
81 add ptr s32
82 push
83 add ptr s32
84 dereference 8
85 negate f64
86 address of
87 push
88 add ptr s32
89 push
90 add ptr s32
91 store 8 at
92 pop
93 clear
94 address of
95 push
96 add ptr s32
97 dereference struct
98 call
99 address of
100 push
101 add ptr s32
102 store struct at
103 pop
104 clear
105 push
106 convert f64 s32
107 address of
108 push
109 add ptr s32
110 push
111 add ptr s32
112 store 8 at
113 pop
114 clear
115 push
116 convert f64 s32
117 address of
118 push
119 add ptr s32
120 push
121 add ptr s32
122 store 8 at
123 pop
124 clear
125 push
126 convert f64 s32
127 address of
128 push
129 add ptr s32
130 push
131 add ptr s32
132 store 8 at
133 pop
134 clear
135 push
136 convert f64 s32
137 address of
138 push
139 add ptr s32
140 store 8 at
141 pop
142 clear
143 push
144 address of
145 push
146 add ptr s32
147 store 4 at
148 pop
149 clear
150 push
151 address of
152 push
153 add ptr s32
154 push
155 add ptr s32
156 store 8 at
157 pop
158 clear
159 push
160 address of
161 push
162 add ptr s32
163 push
164 add ptr s32
165 store 8 at
166 pop
167 clear
168 push
169 address of
170 push
171 add ptr s32
172 push
173 add ptr s32
174 store 8 at
175 pop
176 clear
177 push
178 address of
179 push
180 add ptr s32
181 store 4 at
182 pop
183 clear
184 push
185 address of
186 push
187 add ptr s32
188 store 8 at
189 pop
190 clear
191 push
192 address of
193 push
194 add ptr s32
195 push
196 add ptr s32
197 store 8 at
198 pop
199 clear
200 push
201 address of
202 push
203 add ptr s32
204 push
205 add ptr s32
206 store 8 at
207 pop
208 clear
209 push
210 address of
211 push
212 add ptr s32
213 push
214 add ptr s32
215 store 8 at
216 pop
217 clear
218 push
219 address of
220 push
221 add ptr s32
222 store 8 at
223 pop
224 clear
225 push
226 address of
227 push
228 add ptr s32
229 store 4 at
230 pop
231 clear
232 push
233 address of
234 push
235 add ptr s32
236 push
237 add ptr s32
238 store 8 at
239 pop
240 clear
241 push
242 address of
243 push
244 add ptr s32
245 push
246 add ptr s32
247 store 8 at
248 pop
249 clear
250 push
251 address of
252 push
253 add ptr s32
254 push
255 add ptr s32
256 store 8 at
257 pop
258 clear
259 push
260 address of
261 store 8 at
262 push
263 address of
264 dereference 4
265 mul s32
266 call
267 address of
268 store 8 at
269 address of
270 address of
271 dereference 8
272 push
273 push
274 mul s32
275 add ptr s32
276 push
277 add ptr s32
278 store 8 at
279 pop
280 clear
281 push
282 address of
283 dereference 8
284 push
285 push
286 mul s32
287 add ptr s32
288 push
289 add ptr s32
290 store 8 at
291 pop
292 clear
293 push
294 convert f64 s32
295 address of
296 dereference 8
297 push
298 push
299 mul s32
300 add ptr s32
301 push
302 add ptr s32
303 push
304 add ptr s32
305 store 8 at
306 pop
307 clear
308 push
309 convert f64 s32
310 address of
311 dereference 8
312 push
313 push
314 mul s32
315 add ptr s32
316 push
317 add ptr s32
318 push
319 add ptr s32
320 store 8 at
321 pop
322 clear
323 push
324 negate s32
325 convert f64 s32
326 address of
327 dereference 8
328 push
329 push
330 mul s32
331 add ptr s32
332 push
333 add ptr s32
334 push
335 add ptr s32
336 store 8 at
337 pop
338 clear
339 address of
340 address of
341 dereference 8
342 push
343 push
344 mul s32
345 add ptr s32
346 push
347 add ptr s32
348 store 8 at
349 pop
350 clear
351 push
352 convert f64 s32
353 address of
354 dereference 8
355 push
356 push
357 mul s32
358 add ptr s32
359 push
360 add ptr s32
361 store 8 at
362 pop
363 clear
364 push
365 negate s32
366 convert f64 s32
367 address of
368 dereference 8
369 push
370 push
371 mul s32
372 add ptr s32
373 push
374 add ptr s32
375 push
376 add ptr s32
377 store 8 at
378 pop
379 clear
380 push
381 address of
382 dereference 8
383 push
384 push
385 mul s32
386 add ptr s32
387 push
388 add ptr s32
389 push
390 add ptr s32
391 store 8 at
392 pop
393 clear
394 push
395 negate s32
396 convert f64 s32
397 address of
398 dereference 8
399 push
400 push
401 mul s32
402 add ptr s32
403 push
404 add ptr s32
405 push
406 add ptr s32
407 store 8 at
408 pop
409 clear
410 address of
411 address of
412 dereference 8
413 push
414 push
415 mul s32
416 add ptr s32
417 push
418 add ptr s32
419 store 8 at
420 pop
421 clear
422 push
423 convert f64 s32
424 address of
425 dereference 8
426 push
427 push
428 mul s32
429 add ptr s32
430 push
431 add ptr s32
432 store 8 at
433 pop
434 clear
435 push
436 address of
437 dereference 8
438 push
439 push
440 mul s32
441 add ptr s32
442 push
443 add ptr s32
444 push
445 add ptr s32
446 store 8 at
447 pop
448 clear
449 push
450 address of
451 dereference 8
452 push
453 push
454 mul s32
455 add ptr s32
456 push
457 add ptr s32
458 push
459 add ptr s32
460 store 8 at
461 pop
462 clear
463 push
464 negate s32
465 convert f64 s32
466 address of
467 dereference 8
468 push
469 push
470 mul s32
471 add ptr s32
472 push
473 add ptr s32
474 push
475 add ptr s32
476 store 8 at
477 pop
478 clear
479 address of
480 dereference 4
481 convert f64 s32
482 address of
483 dereference 4
484 convert f64 s32
485 div f64
486 address of
487 store 8 at
488 address of
489 push
490 add ptr s32
491 dereference struct
492 address of
493 push
494 add ptr s32
495 dereference struct
496 call
497 call
498 address of
499 push
500 add ptr s32
501 store struct at
502 pop
503 clear
504 address of
505 push
506 add ptr s32
507 dereference struct
508 address of
509 push
510 add ptr s32
511 dereference struct
512 call
513 address of
514 push
515 add ptr s32
516 store struct at
517 pop
518 clear
519 address of
520 push
521 add ptr s32
522 dereference struct
523 address of
524 push
525 add ptr s32
526 store struct at
527 pop
528 clear
529 address of
530 push
531 add ptr s32
532 dereference struct
533 address of
534 push
535 add ptr s32
536 store struct at
537 pop
538 clear
539 push
540 address of
541 store 8 at
542 address of
543 dereference 4
544 address of
545 dereference 4
546 compare l s32
547 jump false: 833
548 push
549 address of
550 store 8 at
551 address of
552 dereference 4
553 address of
554 dereference 4
555 compare l s32
556 jump false: 824
557 push
558 convert f64 s32
559 address of
560 push
561 add ptr s32
562 store 8 at
563 pop
564 address of
565 push
566 add ptr s32
567 store 8 at
568 pop
569 address of
570 push
571 add ptr s32
572 store 8 at
573 pop
574 clear
575 push
576 address of
577 store 8 at
578 address of
579 dereference 4
580 address of
581 dereference 4
582 compare l s32
583 jump false: 686
584 address of
585 dereference 4
586 convert f64 s32
587 call
588 add f64
589 address of
590 store 8 at
591 address of
592 dereference 4
593 convert f64 s32
594 call
595 add f64
596 address of
597 store 8 at
598 address of
599 dereference 8
600 address of
601 dereference 4
602 convert f64 s32
603 div f64
604 push
605 mul f64
606 push
607 sub f64
608 address of
609 dereference 8
610 mul f64
611 address of
612 push
613 add ptr s32
614 store 8 at
615 pop
616 clear
617 address of
618 dereference 8
619 address of
620 dereference 4
621 convert f64 s32
622 div f64
623 push
624 mul f64
625 push
626 sub f64
627 push
628 negate f64
629 mul f64
630 address of
631 push
632 add ptr s32
633 store 8 at
634 pop
635 clear
636 push
637 address of
638 push
639 add ptr s32
640 dereference 8
641 call
642 call
643 div f64
644 address of
645 push
646 add ptr s32
647 store 8 at
648 pop
649 clear
650 address of
651 dereference struct
652 address of
653 dereference struct
654 call
655 call
656 address of
657 push
658 add ptr s32
659 store struct at
660 pop
661 clear
662 address of
663 dereference struct
664 address of
665 dereference struct
666 address of
667 dereference 8
668 address of
669 dereference 4
670 push
671 call
672 call
673 address of
674 store struct at
675 pop
676 clear
677 address of
678 clone
679 dereference 4
680 push
681 add s32
682 swap
683 store 4 at
684 pop
685 jump: 578
686 address of
687 dereference struct
688 address of
689 dereference 4
690 convert f64 s32
691 call
692 address of
693 store struct at
694 pop
695 clear
696 address of
697 push
698 add ptr s32
699 dereference 8
700 push
701 push
702 div f64
703 call
704 address of
705 push
706 add ptr s32
707 store 8 at
708 pop
709 clear
710 address of
711 push
712 add ptr s32
713 dereference 8
714 push
715 push
716 div f64
717 call
718 address of
719 push
720 add ptr s32
721 store 8 at
722 pop
723 clear
724 address of
725 push
726 add ptr s32
727 dereference 8
728 push
729 push
730 div f64
731 call
732 address of
733 push
734 add ptr s32
735 store 8 at
736 pop
737 clear
738 address of
739 dereference struct
740 push
741 call
742 address of
743 store struct at
744 pop
745 clear
746 address of
747 dereference struct
748 push
749 call
750 address of
751 store struct at
752 pop
753 clear
754 address of
755 dereference 4
756 address of
757 dereference 4
758 mul s32
759 address of
760 dereference 4
761 add s32
762 push
763 mul s32
764 address of
765 store 8 at
766 address of
767 push
768 add ptr s32
769 dereference 8
770 convert u8 f64
771 address of
772 dereference 8
773 address of
774 dereference 4
775 push
776 mul s32
777 add ptr s32
778 store 1 at
779 pop
780 clear
781 address of
782 push
783 add ptr s32
784 dereference 8
785 convert u8 f64
786 address of
787 dereference 8
788 address of
789 dereference 4
790 push
791 add s32
792 push
793 mul s32
794 add ptr s32
795 store 1 at
796 pop
797 clear
798 address of
799 push
800 add ptr s32
801 dereference 8
802 convert u8 f64
803 address of
804 dereference 8
805 address of
806 dereference 4
807 push
808 add s32
809 push
810 mul s32
811 add ptr s32
812 store 1 at
813 pop
814 clear
815 address of
816 clone
817 dereference 4
818 push
819 add s32
820 swap
821 store 4 at
822 pop
823 jump: 551
824 address of
825 clone
826 dereference 4
827 push
828 add s32
829 swap
830 store 4 at
831 pop
832 jump: 542
833 push
834 address of
835 dereference 4
836 address of
837 dereference 4
838 address of
839 dereference 8
840 call
841 clear
842 return
